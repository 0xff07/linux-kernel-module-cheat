#!/usr/bin/env bash
. "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/common"
parsed=$(getopt -o "${common_getopt_flags}" -l "$common_getopt_flags_long" -- "$@")
eval set -- "$parsed"
while true; do
  case "$1" in
    *)
      common_getopt_case "$@"
      ;;
  esac
done
common_setup
if "$common_gem5"; then
  time ./run -a "$common_arch" -E 'm5 exit' -g -T 'Exec,-ExecSymbol,-ExecMicro' "$@"
else
  time ./run -a "$common_arch" -e 'init=/poweroff.out' -T exec_tb "$@"
  time ./qemu-trace2txt -a "$common_arch"
  # Instruction count.
  # We could put this on a separate script, but it just adds more arch boilerplate to a new script.
  # So let's just leave it here for now since it did not add a significant processing time.
  echo "instructions $(wc -l "${common_trace_txt_file}" | cut -d' ' -f1)"
  entry_addr=$("${common_root_dir}/runtc" readelf -h "${common_build_dir}/linux-custom/vmlinux" | grep 'Entry point address' | sed -E 's/.*: *//')
  echo "entry_address ${entry_addr}"
  sed "/${entry_addr}/q" "${common_trace_txt_file}" >"${common_qemu_run_dir}/trace-boot.txt"
  echo "instructions_firmware $(wc -l "${common_qemu_run_dir}/trace-boot.txt" | cut -d' ' -f1)"
fi
